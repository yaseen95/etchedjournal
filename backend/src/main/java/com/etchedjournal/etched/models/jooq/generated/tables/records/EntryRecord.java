/*
 * This file is generated by jOOQ.
 */
package com.etchedjournal.etched.models.jooq.generated.tables.records;


import com.etchedjournal.etched.models.OwnerType;
import com.etchedjournal.etched.models.Schema;
import com.etchedjournal.etched.models.jooq.generated.tables.Entry;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.time.Instant;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EntryRecord extends UpdatableRecordImpl<EntryRecord> implements Record10<String, Instant, Instant, byte[], String, OwnerType, String, String, Integer, Schema> {

    private static final long serialVersionUID = 238081659;

    /**
     * Setter for <code>public.entry.id</code>.
     */
    public EntryRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.entry.id</code>.
     */
    @NotNull
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.entry.created</code>.
     */
    public EntryRecord setCreated(Instant value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.entry.created</code>.
     */
    @NotNull
    public Instant getCreated() {
        return (Instant) get(1);
    }

    /**
     * Setter for <code>public.entry.modified</code>.
     */
    public EntryRecord setModified(Instant value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.entry.modified</code>.
     */
    public Instant getModified() {
        return (Instant) get(2);
    }

    /**
     * Setter for <code>public.entry.content</code>.
     */
    public EntryRecord setContent(byte... value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.entry.content</code>.
     */
    @NotNull
    public byte[] getContent() {
        return (byte[]) get(3);
    }

    /**
     * Setter for <code>public.entry.owner</code>.
     */
    public EntryRecord setOwner(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.entry.owner</code>.
     */
    @NotNull
    @Size(max = 60)
    public String getOwner() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.entry.owner_type</code>.
     */
    public EntryRecord setOwnerType(OwnerType value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.entry.owner_type</code>.
     */
    @NotNull
    public OwnerType getOwnerType() {
        return (OwnerType) get(5);
    }

    /**
     * Setter for <code>public.entry.journal_id</code>.
     */
    public EntryRecord setJournalId(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.entry.journal_id</code>.
     */
    @NotNull
    public String getJournalId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.entry.key_pair_id</code>.
     */
    public EntryRecord setKeyPairId(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.entry.key_pair_id</code>.
     */
    @NotNull
    public String getKeyPairId() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.entry.version</code>.
     */
    public EntryRecord setVersion(Integer value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.entry.version</code>.
     */
    @NotNull
    public Integer getVersion() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>public.entry.schema</code>.
     */
    public EntryRecord setSchema(Schema value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.entry.schema</code>.
     */
    @NotNull
    public Schema getSchema() {
        return (Schema) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<String, Instant, Instant, byte[], String, OwnerType, String, String, Integer, Schema> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<String, Instant, Instant, byte[], String, OwnerType, String, String, Integer, Schema> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Entry.ENTRY.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Instant> field2() {
        return Entry.ENTRY.CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Instant> field3() {
        return Entry.ENTRY.MODIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field4() {
        return Entry.ENTRY.CONTENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Entry.ENTRY.OWNER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OwnerType> field6() {
        return Entry.ENTRY.OWNER_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Entry.ENTRY.JOURNAL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Entry.ENTRY.KEY_PAIR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return Entry.ENTRY.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Schema> field10() {
        return Entry.ENTRY.SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Instant component2() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Instant component3() {
        return getModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component4() {
        return getContent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getOwner();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OwnerType component6() {
        return getOwnerType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getJournalId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getKeyPairId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component9() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema component10() {
        return getSchema();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Instant value2() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Instant value3() {
        return getModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value4() {
        return getContent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getOwner();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OwnerType value6() {
        return getOwnerType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getJournalId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getKeyPairId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema value10() {
        return getSchema();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntryRecord value1(String value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntryRecord value2(Instant value) {
        setCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntryRecord value3(Instant value) {
        setModified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntryRecord value4(byte... value) {
        setContent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntryRecord value5(String value) {
        setOwner(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntryRecord value6(OwnerType value) {
        setOwnerType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntryRecord value7(String value) {
        setJournalId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntryRecord value8(String value) {
        setKeyPairId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntryRecord value9(Integer value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntryRecord value10(Schema value) {
        setSchema(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntryRecord values(String value1, Instant value2, Instant value3, byte[] value4, String value5, OwnerType value6, String value7, String value8, Integer value9, Schema value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EntryRecord
     */
    public EntryRecord() {
        super(Entry.ENTRY);
    }

    /**
     * Create a detached, initialised EntryRecord
     */
    public EntryRecord(String id, Instant created, Instant modified, byte[] content, String owner, OwnerType ownerType, String journalId, String keyPairId, Integer version, Schema schema) {
        super(Entry.ENTRY);

        set(0, id);
        set(1, created);
        set(2, modified);
        set(3, content);
        set(4, owner);
        set(5, ownerType);
        set(6, journalId);
        set(7, keyPairId);
        set(8, version);
        set(9, schema);
    }
}
