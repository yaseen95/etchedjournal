/*
 * This file is generated by jOOQ.
 */
package com.etchedjournal.etched.models.jooq.generated.tables.daos;


import com.etchedjournal.etched.models.OwnerType;
import com.etchedjournal.etched.models.jooq.generated.tables.KeyPair;
import com.etchedjournal.etched.models.jooq.generated.tables.records.KeyPairRecord;

import java.time.Instant;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class KeyPairDao extends DAOImpl<KeyPairRecord, com.etchedjournal.etched.models.jooq.generated.tables.pojos.KeyPair, String> {

    /**
     * Create a new KeyPairDao without any configuration
     */
    public KeyPairDao() {
        super(KeyPair.KEY_PAIR, com.etchedjournal.etched.models.jooq.generated.tables.pojos.KeyPair.class);
    }

    /**
     * Create a new KeyPairDao with an attached configuration
     */
    @Autowired
    public KeyPairDao(Configuration configuration) {
        super(KeyPair.KEY_PAIR, com.etchedjournal.etched.models.jooq.generated.tables.pojos.KeyPair.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(com.etchedjournal.etched.models.jooq.generated.tables.pojos.KeyPair object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.etchedjournal.etched.models.jooq.generated.tables.pojos.KeyPair> fetchById(String... values) {
        return fetch(KeyPair.KEY_PAIR.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.etchedjournal.etched.models.jooq.generated.tables.pojos.KeyPair fetchOneById(String value) {
        return fetchOne(KeyPair.KEY_PAIR.ID, value);
    }

    /**
     * Fetch records that have <code>timestamp IN (values)</code>
     */
    public List<com.etchedjournal.etched.models.jooq.generated.tables.pojos.KeyPair> fetchByTimestamp(Instant... values) {
        return fetch(KeyPair.KEY_PAIR.TIMESTAMP, values);
    }

    /**
     * Fetch records that have <code>public_key IN (values)</code>
     */
    public List<com.etchedjournal.etched.models.jooq.generated.tables.pojos.KeyPair> fetchByPublicKey(byte[]... values) {
        return fetch(KeyPair.KEY_PAIR.PUBLIC_KEY, values);
    }

    /**
     * Fetch records that have <code>private_key IN (values)</code>
     */
    public List<com.etchedjournal.etched.models.jooq.generated.tables.pojos.KeyPair> fetchByPrivateKey(byte[]... values) {
        return fetch(KeyPair.KEY_PAIR.PRIVATE_KEY, values);
    }

    /**
     * Fetch records that have <code>owner IN (values)</code>
     */
    public List<com.etchedjournal.etched.models.jooq.generated.tables.pojos.KeyPair> fetchByOwner(String... values) {
        return fetch(KeyPair.KEY_PAIR.OWNER, values);
    }

    /**
     * Fetch records that have <code>owner_type IN (values)</code>
     */
    public List<com.etchedjournal.etched.models.jooq.generated.tables.pojos.KeyPair> fetchByOwnerType(OwnerType... values) {
        return fetch(KeyPair.KEY_PAIR.OWNER_TYPE, values);
    }

    /**
     * Fetch records that have <code>salt IN (values)</code>
     */
    public List<com.etchedjournal.etched.models.jooq.generated.tables.pojos.KeyPair> fetchBySalt(String... values) {
        return fetch(KeyPair.KEY_PAIR.SALT, values);
    }

    /**
     * Fetch records that have <code>iterations IN (values)</code>
     */
    public List<com.etchedjournal.etched.models.jooq.generated.tables.pojos.KeyPair> fetchByIterations(Integer... values) {
        return fetch(KeyPair.KEY_PAIR.ITERATIONS, values);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<com.etchedjournal.etched.models.jooq.generated.tables.pojos.KeyPair> fetchByVersion(Integer... values) {
        return fetch(KeyPair.KEY_PAIR.VERSION, values);
    }
}
