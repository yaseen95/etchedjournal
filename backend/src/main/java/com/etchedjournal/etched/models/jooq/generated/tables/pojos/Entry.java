/*
 * This file is generated by jOOQ.
 */
package com.etchedjournal.etched.models.jooq.generated.tables.pojos;


import com.etchedjournal.etched.models.OwnerType;
import com.etchedjournal.etched.models.Schema;

import java.time.Instant;
import java.util.Arrays;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Entry {

    private final String    id;
    private final Instant   created;
    private final Instant   modified;
    private final byte[]    content;
    private final String    owner;
    private final OwnerType ownerType;
    private final String    journalId;
    private final String    keyPairId;
    private final Integer   version;
    private final Schema    schema;

    public Entry(Entry value) {
        this.id = value.id;
        this.created = value.created;
        this.modified = value.modified;
        this.content = value.content;
        this.owner = value.owner;
        this.ownerType = value.ownerType;
        this.journalId = value.journalId;
        this.keyPairId = value.keyPairId;
        this.version = value.version;
        this.schema = value.schema;
    }

    public Entry(
        String    id,
        Instant   created,
        Instant   modified,
        byte[]    content,
        String    owner,
        OwnerType ownerType,
        String    journalId,
        String    keyPairId,
        Integer   version,
        Schema    schema
    ) {
        this.id = id;
        this.created = created;
        this.modified = modified;
        this.content = content;
        this.owner = owner;
        this.ownerType = ownerType;
        this.journalId = journalId;
        this.keyPairId = keyPairId;
        this.version = version;
        this.schema = schema;
    }

    @NotNull
    public String getId() {
        return this.id;
    }

    @NotNull
    public Instant getCreated() {
        return this.created;
    }

    public Instant getModified() {
        return this.modified;
    }

    @NotNull
    public byte[] getContent() {
        return this.content;
    }

    @NotNull
    @Size(max = 60)
    public String getOwner() {
        return this.owner;
    }

    @NotNull
    public OwnerType getOwnerType() {
        return this.ownerType;
    }

    @NotNull
    public String getJournalId() {
        return this.journalId;
    }

    @NotNull
    public String getKeyPairId() {
        return this.keyPairId;
    }

    @NotNull
    public Integer getVersion() {
        return this.version;
    }

    @NotNull
    public Schema getSchema() {
        return this.schema;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Entry other = (Entry) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (created == null) {
            if (other.created != null)
                return false;
        }
        else if (!created.equals(other.created))
            return false;
        if (modified == null) {
            if (other.modified != null)
                return false;
        }
        else if (!modified.equals(other.modified))
            return false;
        if (content == null) {
            if (other.content != null)
                return false;
        }
        else if (!Arrays.equals(content, other.content))
            return false;
        if (owner == null) {
            if (other.owner != null)
                return false;
        }
        else if (!owner.equals(other.owner))
            return false;
        if (ownerType == null) {
            if (other.ownerType != null)
                return false;
        }
        else if (!ownerType.equals(other.ownerType))
            return false;
        if (journalId == null) {
            if (other.journalId != null)
                return false;
        }
        else if (!journalId.equals(other.journalId))
            return false;
        if (keyPairId == null) {
            if (other.keyPairId != null)
                return false;
        }
        else if (!keyPairId.equals(other.keyPairId))
            return false;
        if (version == null) {
            if (other.version != null)
                return false;
        }
        else if (!version.equals(other.version))
            return false;
        if (schema == null) {
            if (other.schema != null)
                return false;
        }
        else if (!schema.equals(other.schema))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.created == null) ? 0 : this.created.hashCode());
        result = prime * result + ((this.modified == null) ? 0 : this.modified.hashCode());
        result = prime * result + ((this.content == null) ? 0 : Arrays.hashCode(this.content));
        result = prime * result + ((this.owner == null) ? 0 : this.owner.hashCode());
        result = prime * result + ((this.ownerType == null) ? 0 : this.ownerType.hashCode());
        result = prime * result + ((this.journalId == null) ? 0 : this.journalId.hashCode());
        result = prime * result + ((this.keyPairId == null) ? 0 : this.keyPairId.hashCode());
        result = prime * result + ((this.version == null) ? 0 : this.version.hashCode());
        result = prime * result + ((this.schema == null) ? 0 : this.schema.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Entry (");

        sb.append(id);
        sb.append(", ").append(created);
        sb.append(", ").append(modified);
        sb.append(", ").append("[binary...]");
        sb.append(", ").append(owner);
        sb.append(", ").append(ownerType);
        sb.append(", ").append(journalId);
        sb.append(", ").append(keyPairId);
        sb.append(", ").append(version);
        sb.append(", ").append(schema);

        sb.append(")");
        return sb.toString();
    }
}
