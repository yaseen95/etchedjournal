/*
 * This file is generated by jOOQ.
 */
package com.etchedjournal.etched.models.jooq.generated.tables.daos;


import com.etchedjournal.etched.models.OwnerType;
import com.etchedjournal.etched.models.jooq.generated.tables.Journal;
import com.etchedjournal.etched.models.jooq.generated.tables.records.JournalRecord;

import java.time.Instant;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class JournalDao extends DAOImpl<JournalRecord, com.etchedjournal.etched.models.jooq.generated.tables.pojos.Journal, String> {

    /**
     * Create a new JournalDao without any configuration
     */
    public JournalDao() {
        super(Journal.JOURNAL, com.etchedjournal.etched.models.jooq.generated.tables.pojos.Journal.class);
    }

    /**
     * Create a new JournalDao with an attached configuration
     */
    @Autowired
    public JournalDao(Configuration configuration) {
        super(Journal.JOURNAL, com.etchedjournal.etched.models.jooq.generated.tables.pojos.Journal.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(com.etchedjournal.etched.models.jooq.generated.tables.pojos.Journal object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.etchedjournal.etched.models.jooq.generated.tables.pojos.Journal> fetchById(String... values) {
        return fetch(Journal.JOURNAL.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.etchedjournal.etched.models.jooq.generated.tables.pojos.Journal fetchOneById(String value) {
        return fetchOne(Journal.JOURNAL.ID, value);
    }

    /**
     * Fetch records that have <code>timestamp IN (values)</code>
     */
    public List<com.etchedjournal.etched.models.jooq.generated.tables.pojos.Journal> fetchByTimestamp(Instant... values) {
        return fetch(Journal.JOURNAL.TIMESTAMP, values);
    }

    /**
     * Fetch records that have <code>content IN (values)</code>
     */
    public List<com.etchedjournal.etched.models.jooq.generated.tables.pojos.Journal> fetchByContent(byte[]... values) {
        return fetch(Journal.JOURNAL.CONTENT, values);
    }

    /**
     * Fetch records that have <code>owner IN (values)</code>
     */
    public List<com.etchedjournal.etched.models.jooq.generated.tables.pojos.Journal> fetchByOwner(String... values) {
        return fetch(Journal.JOURNAL.OWNER, values);
    }

    /**
     * Fetch records that have <code>owner_type IN (values)</code>
     */
    public List<com.etchedjournal.etched.models.jooq.generated.tables.pojos.Journal> fetchByOwnerType(OwnerType... values) {
        return fetch(Journal.JOURNAL.OWNER_TYPE, values);
    }

    /**
     * Fetch records that have <code>key_pair_id IN (values)</code>
     */
    public List<com.etchedjournal.etched.models.jooq.generated.tables.pojos.Journal> fetchByKeyPairId(String... values) {
        return fetch(Journal.JOURNAL.KEY_PAIR_ID, values);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<com.etchedjournal.etched.models.jooq.generated.tables.pojos.Journal> fetchByVersion(Integer... values) {
        return fetch(Journal.JOURNAL.VERSION, values);
    }
}
